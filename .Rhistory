y = "Exports (USD)") +
#Visualisasi Data
## 1.1 Plot Level (Original Data)
# Plot Exports vs GDP Partner
plot1_level <- ggplot(gravity_data_final,
aes(x = gdp_partner, y = exports)) +
geom_point(alpha = 0.5, color = "blue") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs GDP Partner (Level)",
x = "GDP Partner (USD)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
# Plot Exports vs GDP Partner
plot1_level <- ggplot(gravity_data_final,
aes(x = gdp_partner, y = exports)) +
geom_point(alpha = 0.5, color = "blue") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs GDP Partner (Level)",
x = "GDP Partner (USD)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
View(gravity_data_final)
setwd("D:/UAS-Metopel")
library(wbstats)      # Untuk data World Bank
library(tidyverse)    # Data manipulation
library(gravity)      # Gravity model utilities
library(readxl)       # Membaca Excel
library(plm)          # Panel data analysis
library(stargazer)    # Reporting regresi
library(lmtest)       # Diagnostic tests
library(sandwich)     # Robust standard errors
library(ggplot2)      # Membuat plot level vs log
# 1. MENGAMBIL DATA
## 1.1 Data PDB dari World Bank
# Definisi negara ASEAN
asean_countries <- c("IDN", "MYS", "SGP", "THA", "PHL", "VNM",
"BRN", "KHM", "LAO", "MMR")
# Mengambil data GDP
gdp_data <- wb_data(
indicator = "NY.GDP.MKTP.CD",  # GDP (current US$)
country = asean_countries,
start_date = 2015,
end_date = 2022
)
# Membersihkan data GDP
gdp_clean <- gdp_data %>%
select(country, date, NY.GDP.MKTP.CD) %>%
rename(year = date,
GDP = NY.GDP.MKTP.CD ) %>%
arrange(country, year)
## 1.2 Import data perdagangan
# Asumsikan data dari UN Comtrade sudah didownload
trade_data <- read_excel("D:/UAS-Metopel/TradeData.xlsx")  # Sesuaikan path file
# Membersihkan data perdagangan
trade_clean <- trade_data %>%
select(year, reporter, partner, primaryValue) %>%
filter(reporter == "Indonesia") %>%
rename(exports = primaryValue) %>%
select(-reporter)
# Import data jarak
distance_data <- read_excel("D:/UAS-Metopel/dist_cepii.xls")
# 4. Membersihkan data jarak
distance_clean <- distance_data %>%
select(iso_o, iso_d, dist) %>%
filter(iso_o == "IDN")%>%
rename(partner = iso_d,
distance = dist) %>%
select(-iso_o)  # Menghapus kolom iso_o karena sudah tidak diperlukan
# Bagian sebelumnya tetap sama sampai pembersihan data awal
# Memperbaiki struktur data GDP
# GDP Indonesia
gdp_indonesia <- gdp_clean %>%
filter(country == "Indonesia") %>%
select(year, GDP) %>%
rename(gdp_indonesia = GDP)
# GDP negara partner
gdp_partner <- gdp_clean %>%
filter(country != "Indonesia") %>%
select(country, year, GDP) %>%
rename(partner = country,
gdp_partner = GDP)
# MENGGABUNGKAN DATA - Metode yang diperbaiki
gravity_data <- trade_clean %>%
# Step 1: Gabung dengan GDP Indonesia
left_join(gdp_indonesia, by = "year") %>%
# Step 2: Gabung dengan GDP partner
left_join(gdp_partner, by = c("partner", "year")) %>%
# Step 3: Gabung dengan data jarak
left_join(distance_clean, by = "partner") %>%
# Step 4: Membuat dummy ASEAN
mutate(asean_dummy = ifelse(partner %in% asean_countries, 1, 0))
# Memeriksa struktur data
str(gravity_data)
# Melihat beberapa baris pertama untuk memastikan data terstruktur dengan benar
head(gravity_data)
# Memeriksa missing values
missing_check <- colSums(is.na(gravity_data))
print(missing_check)
# Melihat ringkasan statistik
summary(gravity_data)
# Menampilkan jumlah observasi per tahun
table(gravity_data$year)
# Menampilkan jumlah observasi per partner
table(gravity_data$partner)
# Transformasi log setelah memastikan data bersih
gravity_data_final <- gravity_data %>%
mutate(
ln_exports = log(exports),
ln_gdp_indonesia = log(gdp_indonesia),
ln_gdp_partner = log(gdp_partner),
ln_distance = log(distance)
)
#Visualisasi Data
## 1.1 Plot Level (Original Data)
# Plot Exports vs GDP Partner
plot1_level <- ggplot(gravity_data_final,
aes(x = gdp_partner, y = exports)) +
geom_point(alpha = 0.5, color = "blue") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs GDP Partner (Level)",
x = "GDP Partner (USD)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
install.packages("gridExtra")
install.packages('scales')
install.packages("scales")
install.packages("scales")
library(gridExtra)
library(scales)
# Plot Exports vs GDP Partner
plot1_level <- ggplot(gravity_data_final,
aes(x = gdp_partner, y = exports)) +
geom_point(alpha = 0.5, color = "blue") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs GDP Partner (Level)",
x = "GDP Partner (USD)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
setwd("D:/UAS-Metopel")
library(wbstats)      # Untuk data World Bank
library(tidyverse)    # Data manipulation
library(gravity)      # Gravity model utilities
library(readxl)       # Membaca Excel
library(plm)          # Panel data analysis
library(stargazer)    # Reporting regresi
library(lmtest)       # Diagnostic tests
library(sandwich)     # Robust standard errors
library(ggplot2)      # Membuat plot level vs log
library(gridExtra)
library(scales)
# 1. MENGAMBIL DATA
## 1.1 Data PDB dari World Bank
# Definisi negara ASEAN
asean_countries <- c("IDN", "MYS", "SGP", "THA", "PHL", "VNM",
"BRN", "KHM", "LAO", "MMR")
# Mengambil data GDP
gdp_data <- wb_data(
indicator = "NY.GDP.MKTP.CD",  # GDP (current US$)
country = asean_countries,
start_date = 2015,
end_date = 2022
)
# Membersihkan data GDP
gdp_clean <- gdp_data %>%
select(country, date, NY.GDP.MKTP.CD) %>%
rename(year = date,
GDP = NY.GDP.MKTP.CD ) %>%
arrange(country, year)
## 1.2 Import data perdagangan
# Asumsikan data dari UN Comtrade sudah didownload
trade_data <- read_excel("D:/UAS-Metopel/TradeData.xlsx")  # Sesuaikan path file
# Membersihkan data perdagangan
trade_clean <- trade_data %>%
select(year, reporter, partner, primaryValue) %>%
filter(reporter == "Indonesia") %>%
rename(exports = primaryValue) %>%
select(-reporter)
# Import data jarak
distance_data <- read_excel("D:/UAS-Metopel/dist_cepii.xls")
# 4. Membersihkan data jarak
distance_clean <- distance_data %>%
select(iso_o, iso_d, dist) %>%
filter(iso_o == "IDN")%>%
rename(partner = iso_d,
distance = dist) %>%
select(-iso_o)  # Menghapus kolom iso_o karena sudah tidak diperlukan
# Bagian sebelumnya tetap sama sampai pembersihan data awal
# Memperbaiki struktur data GDP
# GDP Indonesia
gdp_indonesia <- gdp_clean %>%
filter(country == "Indonesia") %>%
select(year, GDP) %>%
rename(gdp_indonesia = GDP)
# GDP negara partner
gdp_partner <- gdp_clean %>%
filter(country != "Indonesia") %>%
select(country, year, GDP) %>%
rename(partner = country,
gdp_partner = GDP)
# MENGGABUNGKAN DATA - Metode yang diperbaiki
gravity_data <- trade_clean %>%
# Step 1: Gabung dengan GDP Indonesia
left_join(gdp_indonesia, by = "year") %>%
# Step 2: Gabung dengan GDP partner
left_join(gdp_partner, by = c("partner", "year")) %>%
# Step 3: Gabung dengan data jarak
left_join(distance_clean, by = "partner") %>%
# Step 4: Membuat dummy ASEAN
mutate(asean_dummy = ifelse(partner %in% asean_countries, 1, 0))
# Memeriksa struktur data
str(gravity_data)
# Melihat beberapa baris pertama untuk memastikan data terstruktur dengan benar
head(gravity_data)
# Memeriksa missing values
missing_check <- colSums(is.na(gravity_data))
print(missing_check)
# Melihat ringkasan statistik
summary(gravity_data)
# Menampilkan jumlah observasi per tahun
table(gravity_data$year)
# Menampilkan jumlah observasi per partner
table(gravity_data$partner)
# Transformasi log setelah memastikan data bersih
gravity_data_final <- gravity_data %>%
mutate(
ln_exports = log(exports),
ln_gdp_indonesia = log(gdp_indonesia),
ln_gdp_partner = log(gdp_partner),
ln_distance = log(distance)
)
#Visualisasi Data
## 1.1 Plot Level (Original Data)
# Plot Exports vs GDP Partner
plot1_level <- ggplot(gravity_data_final,
aes(x = gdp_partner, y = exports)) +
geom_point(alpha = 0.5, color = "blue") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs GDP Partner (Level)",
x = "GDP Partner (USD)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
print(plot1_level)
# Plot Exports vs Distance
plot2_level <- ggplot(gravity_data_final,
aes(x = distance, y = exports)) +
geom_point(alpha = 0.5, color = "green") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs Jarak (Level)",
x = "Jarak Negara (KM)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
# Menampilkan plot
print(plot2_level)
# Plot Exports vs Distance
plot2_level <- ggplot(gravity_data_final,
aes(x = distance, y = exports)) +
geom_point(alpha = 0.5, color = "brown") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs Jarak (Level)",
x = "Jarak Negara (KM)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
# Menampilkan plot
print(plot2_level)
# Plot Exports vs Distance
plot2_level <- ggplot(gravity_data_final,
aes(x = distance, y = exports)) +
geom_point(alpha = 0.5, color = "gold") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs Jarak (Level)",
x = "Jarak Negara (KM)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
# Menampilkan plot
print(plot2_level)
## 1.2 Plot Log Transformation
# Plot Log Exports vs Log GDP Partner
plot1_log <- ggplot(gravity_data_final,
aes(x = ln_gdp_partner, y = ln_exports)) +
geom_point(alpha = 0.5, color = "blue") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Log Ekspor vs Log GDP Partner",
x = "Log GDP Partner",
y = "Log Exports")
# Menampilkan plot
print(plot1_log)
# Plot Log Exports vs Log Distance
plot2_log <- ggplot(gravity_data_final,
aes(x = ln_distance, y = ln_exports)) +
geom_point(alpha = 0.5, color = "brown") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Log Ekspor vs Log Distance",
x = "Log Distance",
y = "Log Exports")
# Menampilkan plot
print(plot2_log)
# Menampilkan plot
print(plot2_level)
# Plot Exports vs Distance
plot2_level <- ggplot(gravity_data_final,
aes(x = distance, y = exports)) +
geom_point(alpha = 0.5, color = "brown") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs Distance (Level)",
x = "Distance (KM)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
# Menampilkan plot
print(plot2_level)
# Menampilkan semua plot dengan gridExtra
grid.arrange(plot1_level, plot2_level, plot1_log, plot2_log, ncol = 2)
grid.arrange(plot1_level, plot1_log, ncol = 2)
grid.arrange(plot1_level, plot1_log, ncol = 1)
grid.arrange(plot1_level, plot1_log, ncol = 3)
grid.arrange(plot1_level, plot1_log, ncol = 4)
grid.arrange(plot1_level, plot1_log, ncol = 1)
grid.arrange(plot2_level, plot2_log, ncol = 1)
# Model dasar (level)
reg_level <- lm(exports ~ gdp_partner + distance + asean_dummy,
data = gravity_data_final)
# Summary regresi level
summary(reg_level)
## 2.2 Regresi Log
# Model log-log
reg_log <- lm(ln_exports ~ ln_gdp_partner + ln_distance + asean_dummy,
data = gravity_data_final)
# Summary regresi log
summary(reg_log)
## 3.1 Diagnostic Plots untuk Model Level
par(mfrow = c(2,2))
plot(reg_level)
par(mfrow = c(1,1))
## 3.2 Diagnostic Plots untuk Model Log
par(mfrow = c(2,2))
plot(reg_log)
par(mfrow = c(1,1))
# 4. MEMBUAT TABEL HASIL REGRESI YANG RAPI
library(stargazer)
stargazer(reg_level, reg_log,
title = "Hasil Regresi Gravity Model",
column.labels = c("Level Model", "Log Model"),
type = "text",
digits = 3,
out = "regression_results.txt")
# Plot Exports vs GDP Indonesia
plot1_level <- ggplot(gravity_data_final,
aes(x = gdp_indonesia, y = exports)) +
geom_point(alpha = 0.5, color = "magenta") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs GDP Indonesia (Level)",
x = "GDP Indonesia (USD)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
# Menampilkan plot
print(plot1_level)
# Plot Exports vs GDP Indonesia
plot1_level <- ggplot(gravity_data_final,
aes(x = gdp_indonesia, y = exports)) +
geom_point(alpha = 0.5, color = "black") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs GDP Indonesia (Level)",
x = "GDP Indonesia (USD)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
# Menampilkan plot
print(plot1_level)
## 1.2 Plot Log Transformation
# Plot Log Exports vs Log GDP Partner
plot1_log <- ggplot(gravity_data_final,
aes(x = ln_gdp_indonesia, y = ln_exports)) +
geom_point(alpha = 0.5, color = "black") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Log Ekspor vs Log GDP Indonesia",
x = "Log GDP Indonesia",
y = "Log Exports")
# Menampilkan plot
print(plot1_log)
#Visualisasi Data
## 1.1 Plot Level (Original Data)
# Plot Exports vs GDP Indonesia
plot1_level <- ggplot(gravity_data_final,
aes(x = gdp_indonesia, y = exports)) +
geom_point(alpha = 0.5, color = "black") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs GDP Indonesia (Level)",
x = "GDP Indonesia (USD)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
# Menampilkan plot
print(plot1_level)
# Plot Exports vs GDP Partner
plot2_level <- ggplot(gravity_data_final,
aes(x = gdp_partner, y = exports)) +
geom_point(alpha = 0.5, color = "blue") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs GDP Partner (Level)",
x = "GDP Partner (USD)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
# Menampilkan plot
print(plot2_level)
# Plot Exports vs Distance
plot3_level <- ggplot(gravity_data_final,
aes(x = distance, y = exports)) +
geom_point(alpha = 0.5, color = "brown") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Ekspor vs Distance (Level)",
x = "Distance (KM)",
y = "Exports (USD)") +
scale_x_continuous(labels = scales::comma) +
scale_y_continuous(labels = scales::comma)
# Menampilkan plot
print(plot3_level)
## 1.2 Plot Log Transformation
# Plot Log Exports vs Log GDP Partner
plot1_log <- ggplot(gravity_data_final,
aes(x = ln_gdp_indonesia, y = ln_exports)) +
geom_point(alpha = 0.5, color = "black") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Log Ekspor vs Log GDP Indonesia",
x = "Log GDP Indonesia",
y = "Log Exports")
# Menampilkan plot
print(plot1_log)
# Plot Log Exports vs Log GDP Partner
plot2_log <- ggplot(gravity_data_final,
aes(x = ln_gdp_partner, y = ln_exports)) +
geom_point(alpha = 0.5, color = "blue") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Log Ekspor vs Log GDP Partner",
x = "Log GDP Partner",
y = "Log Exports")
# Menampilkan plot
print(plot2_log)
# Plot Log Exports vs Log Distance
plot3_log <- ggplot(gravity_data_final,
aes(x = ln_distance, y = ln_exports)) +
geom_point(alpha = 0.5, color = "brown") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(title = "Log Ekspor vs Log Distance",
x = "Log Distance",
y = "Log Exports")
# Menampilkan plot
print(plot3_log)
#plot ekspor vs gdp indonesia
grid.arrange(plot1_level, plot1_log, ncol = 1)
#plot ekspor vs gdp partner
grid.arrange(plot2_level, plot2_log, ncol = 1)
#plot ekspor vs distance
grid.arrange(plot3_level, plot3_log, ncol = 1)
# Model dasar (level)
reg_level <- lm(exports ~ gdp_indonesia + gdp_partner + distance + asean_dummy,
data = gravity_data_final)
# Summary regresi level
summary(reg_level)
## 2.2 Regresi Log
# Model log-log
reg_log <- lm(ln_exports ~ ln_gdp_indonesia + ln_gdp_partner + ln_distance + asean_dummy,
data = gravity_data_final)
# Summary regresi log
summary(reg_log)
# 3. DIAGNOSTIC PLOTS
## 3.1 Diagnostic Plots untuk Model Level
par(mfrow = c(2,2))
plot(reg_level)
par(mfrow = c(1,1))
## 3.2 Diagnostic Plots untuk Model Log
par(mfrow = c(2,2))
plot(reg_log)
par(mfrow = c(1,1))
# 4. MEMBUAT TABEL HASIL REGRESI YANG RAPI
library(stargazer)
# Export hasil ke format text
stargazer(reg_level, reg_log,
title = "Hasil Regresi Gravity Model",
column.labels = c("Level Model", "Log Model"),
type = "text",
digits = 3,
out = "regression_results.txt")
